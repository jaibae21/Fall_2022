
*UDP
nc -u 127.0.0.1 5678

*TCP 
nc -l 127.0.0.1 5678

the flags: l means listen, u means udp
ifconfig or ip a to figure out ip address of machine
Need QT += network in the .pro file to use
Loop back address QHostAddress::LocalHost
DataStream version Qt_4_4
by default netcat speaks tcp so if you want udp you have to add the -u

/home/work/cpe353/problems/p0019

client server architecture
Qt errors
	qDebug() << socket->errorString();
	Proxy denied connection error
		#include <QNetworkProxy>
		socket->setProxy(QNetworkProxy::NoProxy);



**Networking
	UDP
		low overhead protocol, no "connection" 
		Typical use: streaming media, VoIP, Real-time multiplayer gaming
		Not for applications where reliability is required
		Sender App
			Line Edit
			Send button
			Quit button
			Uses DataStream abstraction object
		Receiver App
			Label
			the incoming UDP message replaces the prev text in the Label
	QT code
	bindmode default: defaultPlatform (or something like that)
	default port is 0
	pendingDatagrams: loops on the messages coming in and adjusts size for each incoming message
		read a message -> then display : the msg then basically gets overwritten

	TCP
		Provides reliable delivery
		usually used for file transfer or things like email 
		handle large number of connections, create a separate thread for each connection
	Qt
		need QT -= qui in project file
		Uses QCoreApplication
	
		
		
		
		